#  Generate the CDF plots
import numpy as np
import matplotlib.pylab as plt

np.random.seed(8675309)
z = np.random.binomial(10,0.7,size=10000)
h = np.bincount(z, minlength=11)
h = h / h.sum()
plt.bar(range(11),h, width=0.9, color='k', fill=False)
plt.xlabel('$x$')
plt.ylabel('$P(X=x)$')
plt.tight_layout(pad=0, w_pad=0, h_pad=0)
plt.savefig("pmf_binomial.png", dpi=300)
plt.savefig("pmf_binomial.eps", dpi=300)
plt.show()
plt.close()

cdf = np.cumsum(h)
plt.bar(range(len(cdf)),cdf, width=0.9, color='k', fill=False)
plt.xlabel('$x$')
plt.ylabel('$CDF(X=x)$')
plt.tight_layout(pad=0, w_pad=0, h_pad=0)
plt.savefig("cdf_binomial.png", dpi=300)
plt.savefig("cdf_binomial.eps", dpi=300)
plt.show()
plt.close()

np.random.seed(73939133)
x = np.linspace(-7,7,10000)
y = (1/np.sqrt(2*np.pi))*np.exp(-x**2/2)
plt.plot(x,y, color='k')
plt.xlabel('$x$')
plt.ylabel('$P(x)$')
plt.tight_layout(pad=0, w_pad=0, h_pad=0)
plt.savefig("pdf_normal.png", dpi=300)
plt.savefig("pdf_normal.eps", dpi=300)
plt.show()
plt.close()

cdf = np.cumsum(y*(x[1]-x[0]))
plt.plot(x,cdf, color='k')
plt.xlabel('$x$')
plt.ylabel('$CDF(x)$')
plt.tight_layout(pad=0, w_pad=0, h_pad=0)
plt.savefig("cdf_normal.png", dpi=300)
plt.savefig("cdf_normal.eps", dpi=300)
plt.show()
plt.close()

